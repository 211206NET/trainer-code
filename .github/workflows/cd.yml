name: CD

# Only trigger when CI build succeeds
on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types:
      - completed
      
env:
  WORKING_DIRECTORY: 05SOA/RestaurantReviews
  
jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: dotnet publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} -c Release -o ${{env.WORKING_DIRECTORY}}/publish
    - name: Generate deployment package
      run: zip -r publish.zip ${{ env.WORKING_DIRECTORY}}/publish
      
    - name: Beanstalk Deploy
      # You may pin to the exact commit or the version.
      # uses: einaregilsson/beanstalk-deploy@6f594ded1b0a22c5e5aa1088e7c58dc5816c92ea
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        # AWS Access Key
        aws_access_key: ${{ secrets.IAM_ACCESS_KEY }}
        # AWS Secret Key
        aws_secret_key: ${{ secrets.IAM_SECRET_KEY }}
        # AWS Session Token when using temporary security credentials such as when assuming a role in AWS through STS
        # aws_session_token: # optional
        # AWS Region
        region: us-west-2
        # Beanstalk application name
        application_name: WebAPI
        # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
        environment_name: WebAPI-prod
        # Version label for new Beanstalk version
        version_label: 1
        # Version description for the new Beanstalk version
        # version_description: # optional
        # Zip file with the version to deploy. If skipped the action will deploy existing version.
        deployment_package: publish.zip
        # Whether the action should skip creating a new bucket and use the given one to upload the deployment package to instead. When omitted the actions will (try to) create a new one during deployment.
        # existing_bucket_name: # optional
        # If set to "true" then the action will deploy an existing version with the given version_label if it already exists, but otherwise create the version and deploy it. If set to true for an action with no environment name it will upload a version if it does not exist already, but do nothing if the version already exists.
        # use_existing_version_if_available: # optional
        # Whether the action should wait for the deployment to finish and log status messages during the wait. Default is "true". If set to "false" the action will start the deployment on Beanstalk and then exit.
        # wait_for_deployment: # optional
        # How many seconds to wait for the environment to return to Green state after deployment is finished. Default is 30 seconds.
        # wait_for_environment_recovery: # optional
